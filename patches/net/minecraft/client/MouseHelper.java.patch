--- a/net/minecraft/client/MouseHelper.java
+++ b/net/minecraft/client/MouseHelper.java
@@ -12,7 +12,7 @@
 import net.minecraft.client.util.NativeUtil;
 import net.minecraft.util.math.MathHelper;
 import org.lwjgl.glfw.GLFWDropCallback;
-
+import net.optifine.reflect.Reflector;
 public class MouseHelper
 {
     private final Minecraft minecraft;
@@ -33,6 +33,7 @@
     private double accumulatedScrollDelta;
     private double lastLookTime = Double.MIN_VALUE;
     private boolean mouseGrabbed;
+    private boolean butts = true;
 
     public MouseHelper(Minecraft minecraftIn)
     {
@@ -44,7 +45,7 @@
      *  
      * @see GLFWMouseButtonCallbackI
      */
-    private void mouseButtonCallback(long handle, int button, int action, int mods)
+    public void mouseButtonCallback(long handle, int button, int action, int mods)
     {
         if (handle == this.minecraft.getMainWindow().getHandle())
         {
@@ -88,7 +89,9 @@
 
                 this.activeButton = -1;
             }
-
+            //Forge
+            if (Reflector.callBoolean(Reflector.ForgeHooksClient_onRawMouseClicked, button, action, mods)) return;
+            //
             boolean[] aboolean = new boolean[] {false};
 
             if (this.minecraft.loadingGui == null)
@@ -109,14 +112,24 @@
                     {
                         Screen.wrapScreenError(() ->
                         {
-                            aboolean[0] = this.minecraft.currentScreen.mouseClicked(d0, d1, i);
+                        	if(Reflector.ForgeHooksClient_onGuiMouseClickedPre.exists()) {
+	                            aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseClickedPre,this.minecraft.currentScreen, d0, d1, i);
+	                            if (!aboolean[0]) aboolean[0] = this.minecraft.currentScreen.mouseClicked(d0, d1, i);
+	                            if (!aboolean[0]) aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseClickedPost, this.minecraft.currentScreen, d0, d1, i);
+                        	} else                        	
+                        		aboolean[0] = this.minecraft.currentScreen.mouseClicked(d0, d1, i);
                         }, "mouseClicked event handler", this.minecraft.currentScreen.getClass().getCanonicalName());
                     }
                     else
                     {
                         Screen.wrapScreenError(() ->
                         {
-                            aboolean[0] = this.minecraft.currentScreen.mouseReleased(d0, d1, i);
+                        	if(Reflector.ForgeHooksClient_onGuiMouseReleasedPre.exists()) {
+	                            aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseReleasedPre,this.minecraft.currentScreen, d0, d1, i);
+	                            if (!aboolean[0]) aboolean[0] = this.minecraft.currentScreen.mouseReleased(d0, d1, i);
+	                            if (!aboolean[0]) aboolean[0] = Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseReleasedPost, this.minecraft.currentScreen, d0, d1, i);
+                        	} else   
+                        		aboolean[0] = this.minecraft.currentScreen.mouseReleased(d0, d1, i);
                         }, "mouseReleased event handler", this.minecraft.currentScreen.getClass().getCanonicalName());
                     }
                 }
@@ -141,7 +154,7 @@
 
                 if (flag)
                 {
-                    if (this.minecraft.player.isSpectator() && i == 2)
+                    if (this.minecraft.player != null && this.minecraft.player.isSpectator() && i == 2)
                     {
                         this.minecraft.ingameGUI.getSpectatorGui().onMiddleClick();
                     }
@@ -151,6 +164,9 @@
                     }
                 }
             }
+            //Forge
+            Reflector.call(Reflector.ForgeHooksClient_fireMouseInput,button, action, mods);
+            //
         }
     }
 
@@ -159,7 +175,7 @@
      *  
      * @see GLFWScrollCallbackI
      */
-    private void scrollCallback(long handle, double xoffset, double yoffset)
+    public void scrollCallback(long handle, double xoffset, double yoffset)
     {
         if (handle == Minecraft.getInstance().getMainWindow().getHandle())
         {
@@ -171,7 +187,9 @@
                 {
                     double d1 = this.mouseX * (double)this.minecraft.getMainWindow().getScaledWidth() / (double)this.minecraft.getMainWindow().getWidth();
                     double d2 = this.mouseY * (double)this.minecraft.getMainWindow().getScaledHeight() / (double)this.minecraft.getMainWindow().getHeight();
-                    this.minecraft.currentScreen.mouseScrolled(d1, d2, d0);
+                    if (Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseScrollPre, this, this.minecraft.currentScreen, d0)) return;
+                    if (this.minecraft.currentScreen.mouseScrolled(d1, d2, d0)) return;
+                    Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseScrollPost, this, this.minecraft.currentScreen, d0); 
                 }
                 else if (this.minecraft.player != null)
                 {
@@ -189,7 +207,11 @@
                     }
 
                     this.accumulatedScrollDelta -= (double)f1;
-
+ 
+                    //Forge
+                    if (Reflector.callBoolean(Reflector.ForgeHooksClient_onMouseScroll, this, d0)) return;
+                    //
+                    
                     if (this.minecraft.player.isSpectator())
                     {
                         if (this.minecraft.ingameGUI.getSpectatorGui().isMenuActive())
@@ -260,7 +282,7 @@
      *  
      * @see GLFWCursorPosCallbackI
      */
-    private void cursorPosCallback(long handle, double xpos, double ypos)
+    public void cursorPosCallback(long handle, double xpos, double ypos)
     {
         if (handle == Minecraft.getInstance().getMainWindow().getHandle())
         {
@@ -288,7 +310,9 @@
                     double d3 = (ypos - this.mouseY) * (double)this.minecraft.getMainWindow().getScaledHeight() / (double)this.minecraft.getMainWindow().getHeight();
                     Screen.wrapScreenError(() ->
                     {
-                        iguieventlistener.mouseDragged(d0, d1, this.activeButton, d2, d3);
+                        if (Reflector.callBoolean(Reflector.ForgeHooksClient_onGuiMouseDragPre, this.minecraft.currentScreen, d0, d1, this.activeButton, d2, d3)) return;
+                        if (iguieventlistener.mouseDragged(d0, d1, this.activeButton, d2, d3)) return;
+                        Reflector.call(Reflector.ForgeHooksClient_onGuiMouseDragPost, this.minecraft.currentScreen, d0, d1, this.activeButton, d2, d3);
                     }, "mouseDragged event handler", iguieventlistener.getClass().getCanonicalName());
                 }
             }
@@ -310,6 +334,11 @@
 
     public void updatePlayerLook()
     {
+    	
+    	//Vivecraft
+    	if(butts) return;
+    	//
+    	
         double d0 = NativeUtil.getTime();
         double d1 = d0 - this.lastLookTime;
         this.lastLookTime = d0;
@@ -378,7 +407,18 @@
     {
         return this.mouseY;
     }
+    //Forge
+    public boolean isMiddleDown() {
+        return this.middleDown;
+    }
+    public double getXVelocity() {
+    	return this.xVelocity;
+    }
 
+    public double getYVelocity() {
+    	return this.yVelocity;
+    }
+    //
     public void setIgnoreFirstMove()
     {
         this.ignoreFirstMove = true;
@@ -398,7 +438,11 @@
      */
     public void grabMouse()
     {
-        if (this.minecraft.isGameFocused())
+    	if (!this.minecraft.vrSettings.seated) {
+    		this.mouseGrabbed = true;
+    		return;
+    	}
+    	else if (this.minecraft.isGameFocused())
         {
             if (!this.mouseGrabbed)
             {
@@ -423,6 +467,10 @@
      */
     public void ungrabMouse()
     {
+    	if (!this.minecraft.vrSettings.seated) {
+    		this.mouseGrabbed = false;
+    		return;
+    	}
         if (this.mouseGrabbed)
         {
             this.mouseGrabbed = false;
