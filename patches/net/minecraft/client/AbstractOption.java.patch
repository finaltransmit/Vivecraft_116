--- a/net/minecraft/client/AbstractOption.java
+++ b/net/minecraft/client/AbstractOption.java
@@ -200,7 +200,9 @@
             return d0 == p_lambda$static$35_1_.getMaxValue() ? p_lambda$static$35_1_.getGenericValueComponent(new TranslationTextComponent("options.framerateLimit.max")) : p_lambda$static$35_1_.getGenericValueComponent(new TranslationTextComponent("options.framerate", (int)d0));
         }
     });
-    public static final SliderPercentageOption GAMMA = new SliderPercentageOption("options.gamma", 0.0D, 1.0D, 0.0F, (p_lambda$static$36_0_) ->
+    //Vivecraft cant see shit min
+    public static final SliderPercentageOption GAMMA = new SliderPercentageOption("options.gamma", -0.5D, 1.0D, 0.0F, (p_lambda$static$36_0_) ->
+    //
     {
         return p_lambda$static$36_0_.gamma;
     }, (p_lambda$static$37_0_, p_lambda$static$37_1_) ->
@@ -208,15 +210,26 @@
         p_lambda$static$37_0_.gamma = p_lambda$static$37_1_;
     }, (p_lambda$static$38_0_, p_lambda$static$38_1_) ->
     {
-        double d0 = p_lambda$static$38_1_.normalizeValue(p_lambda$static$38_1_.get(p_lambda$static$38_0_));
+    	double d0 = p_lambda$static$38_1_.normalizeValue(p_lambda$static$38_1_.get(p_lambda$static$38_0_));
 
-        if (d0 == 0.0D)
-        {
-            return p_lambda$static$38_1_.getGenericValueComponent(new TranslationTextComponent("options.gamma.min"));
-        }
-        else {
-            return d0 == 1.0D ? p_lambda$static$38_1_.getGenericValueComponent(new TranslationTextComponent("options.gamma.max")) : p_lambda$static$38_1_.getPercentageAddMessage((int)(d0 * 100.0D));
-        }
+    	//Vivecraft 
+    	if (Math.abs(d0 - 1D / 3D) < 0.005)
+    	{
+    		return p_lambda$static$38_1_.getGenericValueComponent(new TranslationTextComponent("options.gamma.min"));
+    	}
+    	else if (d0 == 1.0D)
+    	{
+    		return p_lambda$static$38_1_.getGenericValueComponent(new TranslationTextComponent("options.gamma.max"));
+    	}
+    	else if (d0 == 0.0D)
+    	{
+    		return p_lambda$static$38_1_.getGenericValueComponent(new TranslationTextComponent("vivecraft.options.gamma.cantseeshitcaptain"));
+    	}
+    	else
+    	{
+    		return p_lambda$static$38_1_.getGenericValueComponent(new StringTextComponent( (d0 >= 1D / 3D ? "+" : "") + (int)((d0 * 1.5 - 0.5) * 100.0D) + "%"));
+    	}
+    	//
     });
     public static final SliderPercentageOption MIPMAP_LEVELS = new SliderPercentageOption("options.mipmapLevels", 0.0D, 4.0D, 1.0F, (p_lambda$static$39_0_) ->
     {
@@ -357,6 +370,9 @@
 
             p_lambda$static$65_0_.updateRenderClouds();
             minecraft.worldRenderer.loadRenderers();
+            //Vivecraft
+            minecraft.stereoProvider.reinitFrameBuffers("gfx setting change");
+            //
         }
     }, (p_lambda$static$66_0_, p_lambda$static$66_1_) ->
     {
@@ -379,14 +395,16 @@
     });
     public static final IteratableOption GUI_SCALE = new IteratableOption("options.guiScale", (p_lambda$static$67_0_, p_lambda$static$67_1_) ->
     {
-        p_lambda$static$67_0_.guiScale = MathHelper.normalizeAngle(p_lambda$static$67_0_.guiScale + p_lambda$static$67_1_, Minecraft.getInstance().getMainWindow().calcGuiScale(0, Minecraft.getInstance().getForceUnicodeFont()) + 1);
+    	//Vivecraft switch to guiScaleUser
+    	p_lambda$static$67_0_.guiScaleUser = MathHelper.normalizeAngle(p_lambda$static$67_0_.guiScaleUser + p_lambda$static$67_1_, Minecraft.getInstance().getMainWindow().calcGuiScale(0, Minecraft.getInstance().getForceUnicodeFont()) + 1);
     }, (p_lambda$static$68_0_, p_lambda$static$68_1_) ->
     {
-        return p_lambda$static$68_0_.guiScale == 0 ? p_lambda$static$68_1_.getGenericValueComponent(new TranslationTextComponent("options.guiScale.auto")) : p_lambda$static$68_1_.getMessageWithValue(p_lambda$static$68_0_.guiScale);
+    	return p_lambda$static$68_0_.guiScaleUser == 0 ? p_lambda$static$68_1_.getGenericValueComponent(new TranslationTextComponent("options.guiScale.auto")) : p_lambda$static$68_1_.getMessageWithValue(p_lambda$static$68_0_.guiScaleUser);
     });
+    //
     public static final IteratableOption MAIN_HAND = new IteratableOption("options.mainHand", (p_lambda$static$69_0_, p_lambda$static$69_1_) ->
     {
-        p_lambda$static$69_0_.mainHand = p_lambda$static$69_0_.mainHand.opposite();
+    	p_lambda$static$69_0_.mainHand = p_lambda$static$69_0_.mainHand.opposite();
     }, (p_lambda$static$70_0_, p_lambda$static$70_1_) ->
     {
         return p_lambda$static$70_1_.getGenericValueComponent(p_lambda$static$70_0_.mainHand.getHandName());
@@ -651,8 +669,8 @@
     public static final IteratableOption SHOW_CAPES = new IteratableOptionOF("of.options.SHOW_CAPES");
     public static final IteratableOption CONNECTED_TEXTURES = new IteratableOptionOF("of.options.CONNECTED_TEXTURES");
     public static final IteratableOption CUSTOM_ITEMS = new IteratableOptionOF("of.options.CUSTOM_ITEMS");
-    public static final SliderPercentageOption AA_LEVEL = new SliderPercentageOptionOF("of.options.AA_LEVEL", 0.0D, 16.0D, 1.0F);
-    public static final SliderPercentageOption AF_LEVEL = new SliderPercentageOptionOF("of.options.AF_LEVEL", 1.0D, 16.0D, 1.0F);
+    public static final SliderPercentageOption AA_LEVEL = new SliderPercentageOptionOF("of.options.AA_LEVEL", 0.0D, 16.0D, new double[] {0.0D, 2.0D, 4.0D, 6.0D, 8.0D, 12.0D, 16.0D});
+    public static final SliderPercentageOption AF_LEVEL = new SliderPercentageOptionOF("of.options.AF_LEVEL", 1.0D, 16.0D, new double[] {1.0D, 2.0D, 4.0D, 8.0D, 16.0D});
     public static final IteratableOption ANIMATED_TEXTURES = new IteratableOptionOF("of.options.ANIMATED_TEXTURES");
     public static final IteratableOption NATURAL_TEXTURES = new IteratableOptionOF("of.options.NATURAL_TEXTURES");
     public static final IteratableOption EMISSIVE_TEXTURES = new IteratableOptionOF("of.options.EMISSIVE_TEXTURES");
@@ -684,7 +702,7 @@
 
     public abstract Widget createWidget(GameSettings options, int xIn, int yIn, int widthIn);
 
-    protected ITextComponent getBaseMessageTranslation()
+    public ITextComponent getBaseMessageTranslation()
     {
         return this.translatedBaseMessage;
     }
@@ -714,12 +732,12 @@
         return new TranslationTextComponent("options.percent_add_value", this.getBaseMessageTranslation(), doubleIn);
     }
 
-    protected ITextComponent getGenericValueComponent(ITextComponent valueMessage)
+    public ITextComponent getGenericValueComponent(ITextComponent valueMessage)
     {
         return new TranslationTextComponent("options.generic_value", this.getBaseMessageTranslation(), valueMessage);
     }
 
-    protected ITextComponent getMessageWithValue(int value)
+    public ITextComponent getMessageWithValue(int value)
     {
         return this.getGenericValueComponent(new StringTextComponent(Integer.toString(value)));
     }
