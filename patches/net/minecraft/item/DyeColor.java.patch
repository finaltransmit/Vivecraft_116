--- a/net/minecraft/item/DyeColor.java
+++ b/net/minecraft/item/DyeColor.java
@@ -7,6 +7,9 @@
 import javax.annotation.Nullable;
 import net.minecraft.block.material.MaterialColor;
 import net.minecraft.util.IStringSerializable;
+import net.minecraft.util.ResourceLocation;
+import net.minecraftforge.common.Tags;
+import net.optifine.reflect.Reflector;
 
 public enum DyeColor implements IStringSerializable
 {
@@ -27,21 +30,22 @@
     RED(14, "red", 11546150, MaterialColor.RED, 11743532, 16711680),
     BLACK(15, "black", 1908001, MaterialColor.BLACK, 1973019, 0);
 
-    private static final DyeColor[] VALUES = Arrays.stream(values()).sorted(Comparator.comparingInt(DyeColor::getId)).toArray((p_199795_0_) -> {
-        return new DyeColor[p_199795_0_];
+    private static final DyeColor[] VALUES = Arrays.stream(values()).sorted(Comparator.comparingInt(DyeColor::getId)).toArray((p_lambda$static$0_0_) -> {
+        return new DyeColor[p_lambda$static$0_0_];
     });
-    private static final Int2ObjectOpenHashMap<DyeColor> BY_FIREWORK_COLOR = new Int2ObjectOpenHashMap<>(Arrays.stream(values()).collect(Collectors.toMap((p_199793_0_) -> {
-        return p_199793_0_.fireworkColor;
-    }, (p_199794_0_) -> {
-        return p_199794_0_;
+    private static final Int2ObjectOpenHashMap<DyeColor> BY_FIREWORK_COLOR = new Int2ObjectOpenHashMap<>(Arrays.stream(values()).collect(Collectors.toMap((p_lambda$static$1_0_) -> {
+        return p_lambda$static$1_0_.fireworkColor;
+    }, (p_lambda$static$2_0_) -> {
+        return p_lambda$static$2_0_;
     })));
     private final int id;
     private final String translationKey;
     private final MaterialColor mapColor;
     private final int colorValue;
     private final int swappedColorValue;
-    private final float[] colorComponentValues;
+    private float[] colorComponentValues;
     private final int fireworkColor;
+    private final Tags.IOptionalNamedTag<Item> tag;
     private final int textColor;
 
     private DyeColor(int idIn, String translationKeyIn, int colorValueIn, MaterialColor mapColorIn, int fireworkColorIn, int textColorIn)
@@ -55,6 +59,7 @@
         int j = (colorValueIn & 65280) >> 8;
         int k = (colorValueIn & 255) >> 0;
         this.swappedColorValue = k << 16 | j << 8 | i << 0;
+        this.tag = (Tags.IOptionalNamedTag)Reflector.ForgeItemTags_createOptional.call((Object)(new ResourceLocation("forge", "dyes/" + translationKeyIn)));
         this.colorComponentValues = new float[] {(float)i / 255.0F, (float)j / 255.0F, (float)k / 255.0F};
         this.fireworkColor = fireworkColorIn;
     }
@@ -131,4 +136,40 @@
     {
         return this.translationKey;
     }
+
+    public void setColorComponentValues(float[] p_setColorComponentValues_1_)
+    {
+        this.colorComponentValues = p_setColorComponentValues_1_;
+    }
+
+    public int getColorValue()
+    {
+        return this.colorValue;
+    }
+
+    public Tags.IOptionalNamedTag<Item> getTag()
+    {
+        return this.tag;
+    }
+
+    @Nullable
+    public static DyeColor getColor(ItemStack p_getColor_0_)
+    {
+        if (p_getColor_0_.getItem() instanceof DyeItem)
+        {
+            return ((DyeItem)p_getColor_0_.getItem()).getDyeColor();
+        }
+        else
+        {
+            for (DyeColor dyecolor : VALUES)
+            {
+                if (p_getColor_0_.getItem().isIn(dyecolor.getTag()))
+                {
+                    return dyecolor;
+                }
+            }
+
+            return null;
+        }
+    }
 }
